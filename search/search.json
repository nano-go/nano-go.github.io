[{"name":"hello.md","content":"\n## Blog Builder\nThis project is written in `node.js`. It's used to build yourself blog site.\nYou can custom your theme and your markdown parser.\n\n\n### 1. Flow\n1. Users use the `draft` tool to generate draft files.\n2. Use the `post` tool to render a draft file into a html file.\n\n## Markdown Format\n```\ntitle: ...\ncategory: ...\ntags: t1, t2 ....\n------------------------------------------\n```\n\n## Modules\n\n### Config.json\n\n....\n\n### DB.json\n`./db.json` is a json file that records all articles, tags and categories.  \n\nContent\n``` json\nPosts -> []: contains all posted articles.  \nPosts[i] -> {  \n    id -> string: the id of the ariticle,\n    source -> string: the source path of the ariticle.\n    title -> string: the title of the article,  \n    category -> string: the category of the ariticle,\n    tags -> [string]: the tags of the ariticle,\n    lastModifiedDate -> number: the last updated date,  \n    creationDate -> number: the creation date,\n}: contains the information of an article.\n```\n\n## Commands\n#### 1. post\n`post` is used to render a draft into a html file.  \n`post` will record the information of the specified draft to the `db.json`.  \n\nPost Flow:\n\n1. Parse the specfied draft.\n2. Open `./db.json` and check the parsed draft object.\n3. Record the information of the draft to the `./db.json`.\n4. Render the draft into html file.\n5. Move the rendered html file to the `./articles/<category>/` directory.\n6. Update `./db.json`.\n7. Update `./tags/index.html`.\n8. Update `./categories/index.html`.\n9. Update `./index.html`.\n\n> Note if you post a rendered draft, the corresponding html file will be update.\n\n## How to render a markdown file?\nFirstly we need to parse a markdown file into a js object that contains `title`, `name`, `category`, `summary`, `content` attributes.  \nAnd then the current theme will be used to render the object into a html file.\n\n## Theme\nApi\n``` javascript\n// returns the rendered html content of the mdObj.\nfunction renderArticle(mdObj) => string;\n\n// returns the `tags/index.html` content.\nfunction renderTagsIndex(dbJson) => string;\n\n// returns the `categories/index.html` content.\nfunction renderCategoriesIndex(dbJson) => string;\n\n// returns the `./page/{page}/index.html` content.\nfunction renderIndex(dbJson, page) => string;\n```\n","tags":["document","test"],"category":"computer"}]